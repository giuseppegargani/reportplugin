plugins {
    id 'groovy'
    id 'java'
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id 'java-gradle-plugin'
    id 'maven-publish'
    id "com.gradle.plugin-publish" version "1.0.0-rc-2"
}


group 'com.github.giuseppegargani'
version '0.05'

pluginBundle {
    website = 'https://github.com/giuseppegargani/greetings_plugin'
    vcsUrl = 'https://github.com/giuseppegargani/greetings_plugin'
    tags = ['example', 'try', 'prova', 'tentativo']
}

repositories {
    // Use Maven Central for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    google()
    mavenCentral()
    //per caricamento artifactId locale per plugin
    mavenLocal()
    gradlePluginPortal()
    jcenter() // Warning: this repository is going to shut down soon
}

def myRpm = artifacts.add('archives', file("$buildDir\\prova.txt"))

publishing {
    publications {
        maven(MavenPublication) {
            artifact myRpm
            artifactId "documenti"

            pom {
                name = 'My Library'
                description = 'A concise description of my library'
                url = 'http://www.example.com/library'
                properties = [
                        myProp: "value",
                        "prop.with.dots": "anotherValue"
                ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'johnd'
                        name = 'John Doe'
                        email = 'john.doe@example.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://example.com/my-library.git'
                    developerConnection = 'scm:git:ssh://example.com/my-library.git'
                    url = 'http://example.com/my-library/'
                }
            }
            //groupId 'com.github.giuseppegargani'
            //version '0.02'
        }
    }
}

task('eccomi') {
    doLast {
        def elemento = file("$buildDir\\prova.txt"  /*+'/src/main/groovy/com.github.giuseppegargani/prova.txt'*/)
        if(elemento.exists()) { println("IL FILE ESISTE")} else { println("IL FILE NON ESISTE") }
        println("TASK LOCALE DEL PLUGIN e $elemento")
    }
}

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.7'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}